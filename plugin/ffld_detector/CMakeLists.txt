SET ( MOD_NAME ffld_detector )

# Configure Qt5.
SET ( CMAKE_AUTOMOC ON )
SET ( CMAKE_INCLUDE_CURRENT_DIR ON )

# FFTW3
FIND_PATH ( FFTW3_INCLUDE_DIRS fftw3.h
			PATHS ${FFTW3_ROOT}/api
			NO_CMAKE_SYSTEM_PATH )
MESSAGE ( STATUS ${FFTW3_INCLUDE_DIRS} )
FIND_LIBRARY ( FFTW3_LIBRARIES fftw3f
			PATHS ${FFTW3_ROOT}/.libs
			NO_CMAKE_SYSTEM_PATH )
MESSAGE ( STATUS ${FFTW3_LIBRARIES} )
IF ( NOT FFTW3_INCLUDE_DIRS OR NOT FFTW3_LIBRARIES )
	MESSAGE ( FATAL_ERROR "Could not find fftw3" )
ENDIF()
MESSAGE ( STATUS "Using fftw3 header in ${FFTW3_INCLUDE_DIRS} with ${FFTW3_LIBRARIES}" )

ADD_SUBDIRECTORY ( ffld )

INCLUDE_DIRECTORIES (
	../
	${OpenCV_INCLUDE_DIRS}
	${FFTW3_INCLUDE_DIRS}
	${Eigen_INCLUDE_DIRS}
	${Qt5Widgets_INCLUDE_DIRS} )

LINK_DIRECTORIES (
	${OpenCV_LIBDIR} )

QT5_WRAP_UI ( QT_UI_HEADERS ui.ui )
SET ( HEADER_FILES ${QT_UI_HEADERS}
	ffld_detector.h detector.h )
SET ( SOURCE_FILES
		ffld_detector.cpp detector.cpp )

SET ( CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY} )

ADD_DEFINITIONS ( -DQT_PLUGIN )

# Fix RPATH
SET ( CMAKE_SKIP_BUILD_RPATH FALSE )
SET ( CMAKE_BUILD_WITH_INSTALL_RPATH FALSE )
SET ( CMAKE_INSTALL_RPATH "\$ORIGIN:\$ORIGIN/.." )
SET ( CMAKE_INSTALL_RPATH_USE_LINK_PATH FALSE )

# Create directory for models
FILE ( MAKE_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/model )

ADD_LIBRARY ( ${MOD_NAME} SHARED ${HEADER_FILES} ${SOURCE_FILES} )
QT5_USE_MODULES ( ${MOD_NAME} Widgets )

TARGET_LINK_LIBRARIES ( ${MOD_NAME}
	ffld ${OpenCV_LIBRARIES} ${FFTW3_LIBRARIES} )

ADD_CUSTOM_COMMAND ( TARGET ${MOD_NAME} POST_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy ${CMAKE_CURRENT_SOURCE_DIR}/model/myautonewbm3.txt ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/model/ )

INSTALL (	TARGETS ${MOD_NAME}
			LIBRARY DESTINATION plugins
			COMPONENT ${MOD_NAME} )
INSTALL (	FILES
			model/myautonewbm3.txt
			DESTINATION model
			COMPONENT acv )
